com.mparticle.AESObfuscator -> com.mparticle.a:
    byte[] IV -> a
    javax.crypto.Cipher mEncryptor -> b
    javax.crypto.Cipher mDecryptor -> c
    71:80:java.lang.String obfuscate(java.lang.String,java.lang.String) -> a
    85:105:java.lang.String unobfuscate(java.lang.String,java.lang.String) -> b
com.mparticle.AppConfig -> com.mparticle.b:
    android.content.Context mContext -> n
    java.lang.String mKey -> a
    java.lang.String mSecret -> b
    boolean reportUncaughtExceptions -> c
    boolean debug -> d
    int sessionTimeout -> e
    int debugUploadInterval -> f
    int uploadInterval -> g
    boolean isPushEnabled -> h
    java.lang.String pushSenderId -> i
    boolean sandboxMode -> j
    java.lang.String licenseKey -> k
    boolean isLicensingEnabled -> l
    boolean autoTrackingEnabled -> m
    java.lang.String sOpenUDID -> o
    java.lang.String sBuildUUID -> p
    107:107:int getResourceId(java.lang.String,java.lang.String) -> a
    111:114:void debugLog(java.lang.String) -> a
    117:122:java.lang.String getString(java.lang.String) -> b
    126:131:boolean getBoolean(java.lang.String,boolean) -> a
    135:140:int getInteger(java.lang.String,int) -> a
    35:110:org.json.JSONObject collectAppInfo(android.content.Context) -> a
    120:217:org.json.JSONObject collectDeviceInfo(android.content.Context) -> b
    56:88:java.lang.String getCpuUsage() -> a
    147:148:java.lang.String getAndroidID(android.content.Context) -> c
    189:205:long getTotalMemoryPreJB() -> b
    210:224:java.lang.String getOpenUDID(android.content.Context) -> d
    233:271:java.lang.String getBuildUUID(android.content.Context) -> e
    275:282:java.lang.String convertBytesToUUID(byte[],boolean) -> a
    287:293:boolean isDebug(android.content.pm.PackageManager,java.lang.String) -> a
    374:388:boolean isPhoneRooted() -> c
    404:405:boolean checkPermission(android.content.Context,java.lang.String) -> a
    22:27:int getAppVersion(android.content.Context) -> g
    40:58:java.lang.String getRegistrationId(android.content.Context) -> f
    67:73:void enablePushNotifications(android.content.Context,java.lang.String) -> b
    83:91:void storeRegistrationId(android.content.Context,java.lang.String,com.mparticle.PushRegistrationListener) -> a
    110:114:void clearPushRegistrationId(android.content.Context,com.mparticle.PushRegistrationListener) -> a
com.mparticle.AppStateManager -> com.mparticle.c:
    android.content.Context mContext -> a
    java.util.concurrent.atomic.AtomicInteger mActivities -> b
    long mLastStoppedTime -> c
    android.os.Handler delayedBackgroundCheckHandler -> d
    java.lang.Runnable backgroundChecker -> e
    92:92:boolean isBackgrounded() -> a
    96:99:void onActivityStarted(android.app.Activity) -> a
    102:105:void onActivityStopped(android.app.Activity) -> b
    108:121:void recordActivityStarted(android.app.Activity) -> c
    124:136:void recordActivityStopped(android.app.Activity) -> d
com.mparticle.AppStateManager$1 -> com.mparticle.c$1:
    com.mparticle.AppStateManager this$0 -> a
    30:36:void run() -> run
com.mparticle.AppStateManager$2 -> com.mparticle.c$2:
    com.mparticle.AppStateManager this$0 -> a
    57:57:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    61:62:void onActivityStarted(android.app.Activity) -> onActivityStarted
    67:67:void onActivityResumed(android.app.Activity) -> onActivityResumed
    72:72:void onActivityPaused(android.app.Activity) -> onActivityPaused
    76:77:void onActivityStopped(android.app.Activity) -> onActivityStopped
    82:82:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    87:87:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
com.mparticle.Base64 -> com.mparticle.d:
    char[] CA -> a
    int[] IA -> b
    337:379:byte[] decode(byte[]) -> a
com.mparticle.Base64DecoderException -> com.mparticle.e:
    long serialVersionUID -> serialVersionUID
com.mparticle.ConfigManager -> com.mparticle.f:
    android.content.Context mContext -> a
    android.content.SharedPreferences mPreferences -> b
    com.mparticle.AppConfig localPrefs -> c
    java.lang.String[] pushKeys -> d
    int uploadMode -> e
    java.lang.String logUnhandledExceptions -> f
    boolean loaded -> g
    boolean sendOoEvents -> h
    org.json.JSONArray providerPersistence -> i
    54:92:void updateConfig(org.json.JSONObject) -> a
    95:95:java.lang.String[] getPushKeys() -> a
    107:110:boolean getLogUnhandledExceptions() -> b
    115:115:boolean getSandboxMode() -> c
    119:122:int getUploadMode() -> d
    127:127:java.lang.String getApiKey() -> e
    131:131:java.lang.String getApiSecret() -> f
    135:138:long getUploadInterval() -> g
    143:143:boolean isDebug() -> h
    151:152:void setDebug(boolean) -> a
    155:156:void setUploadInterval(int) -> a
    159:160:void setDebugUploadInterval(int) -> b
    163:163:int getSessionTimeout() -> i
    167:168:void setSessionTimeout(int) -> c
    171:171:boolean isPushEnabled() -> j
    176:178:java.lang.String getPushSenderId() -> k
    182:186:void setPushSenderId(java.lang.String) -> a
    190:196:void restoreFromCache() -> l
    199:199:java.lang.String getLicenseKey() -> m
    203:203:boolean isLicensingEnabled() -> n
    207:210:void setPushSoundEnabled(boolean) -> b
    213:216:void setPushVibrationEnabled(boolean) -> c
    219:223:boolean getSendOoEvents() -> o
    229:231:void setOptOut(boolean) -> d
    234:234:boolean getOptedOut() -> p
    238:238:boolean isAutoTrackingEnabled() -> q
    242:242:boolean isPushSoundEnabled() -> r
    245:245:boolean isPushVibrationEnabled() -> s
    249:252:void setPushNotificationIcon(int) -> d
    255:258:void setPushNotificationTitle(int) -> e
    261:261:int getPushTitle() -> t
    265:265:int getPushIcon() -> u
    269:269:int getBreadcrumbLimit() -> v
    279:280:void setProviderPersistence(org.json.JSONArray) -> a
    283:283:org.json.JSONArray getProviderPersistence() -> w
com.mparticle.DeviceLimiter -> com.mparticle.g:
com.mparticle.ExceptionHandler -> com.mparticle.h:
    java.lang.Thread$UncaughtExceptionHandler mOriginalUncaughtExceptionHandler -> a
    21:31:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    34:34:java.lang.Thread$UncaughtExceptionHandler getOriginalExceptionHandler() -> a
com.mparticle.GBase64 -> com.mparticle.i:
    byte[] ALPHABET -> a
    byte[] DECODABET -> b
    boolean $assertionsDisabled -> c
    248:248:java.lang.String encode(byte[]) -> a
    379:407:int decode4to3(byte[],int,byte[],int,byte[]) -> a
    420:421:byte[] decode(java.lang.String) -> a
com.mparticle.ILicenseResultListener -> com.mparticle.ILicenseResultListener:
    void verifyLicense(int,java.lang.String,java.lang.String) -> a
com.mparticle.ILicenseResultListener$Stub -> com.mparticle.ILicenseResultListener$Stub:
    25:32:com.mparticle.ILicenseResultListener asInterface(android.os.IBinder) -> asInterface
    36:36:android.os.IBinder asBinder() -> asBinder
    40:60:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.mparticle.ILicenseResultListener$Stub$Proxy -> com.mparticle.ILicenseResultListener$Stub$a:
    android.os.IBinder mRemote -> a
    71:71:android.os.IBinder asBinder() -> asBinder
    79:89:void verifyLicense(int,java.lang.String,java.lang.String) -> a
com.mparticle.ILicensingService -> com.mparticle.ILicensingService:
    void checkLicense(long,java.lang.String,com.mparticle.ILicenseResultListener) -> a
com.mparticle.ILicensingService$Stub -> com.mparticle.ILicensingService$Stub:
    25:32:com.mparticle.ILicensingService asInterface(android.os.IBinder) -> asInterface
    36:36:android.os.IBinder asBinder() -> asBinder
    40:60:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.mparticle.ILicensingService$Stub$Proxy -> com.mparticle.ILicensingService$Stub$a:
    android.os.IBinder mRemote -> a
    71:71:android.os.IBinder asBinder() -> asBinder
    79:89:void checkLicense(long,java.lang.String,com.mparticle.ILicenseResultListener) -> a
com.mparticle.LicenseChecker -> com.mparticle.j:
    java.security.SecureRandom RANDOM -> a
    com.mparticle.ILicensingService mService -> b
    java.security.PublicKey mPublicKey -> c
    android.content.Context mContext -> d
    com.mparticle.Policy mPolicy -> e
    android.os.Handler mHandler -> f
    java.lang.String mPackageName -> g
    java.lang.String mVersionCode -> h
    java.util.Set mChecksInProgress -> i
    java.util.Queue mPendingChecks -> j
    107:119:java.security.PublicKey generatePublicKey(java.lang.String) -> a
    137:171:void checkAccess(com.mparticle.LicenseCheckerCallback) -> a
    175:187:void runChecks() -> a
    190:194:void finishCheck(com.mparticle.LicenseValidator) -> a
    275:277:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    283:285:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    292:299:void handleServiceConnectionError(com.mparticle.LicenseValidator) -> b
    342:346:java.lang.String getVersionCode(android.content.Context,java.lang.String) -> a
    55:55:void access$100(com.mparticle.LicenseChecker,com.mparticle.LicenseValidator) -> a
    55:55:void access$200(com.mparticle.LicenseChecker,com.mparticle.LicenseValidator) -> b
    55:55:java.util.Set access$300(com.mparticle.LicenseChecker) -> a
    55:55:java.security.PublicKey access$500(com.mparticle.LicenseChecker) -> b
    55:55:android.os.Handler access$600(com.mparticle.LicenseChecker) -> c
com.mparticle.LicenseChecker$ResultListener -> com.mparticle.j$a:
    com.mparticle.LicenseValidator mValidator -> b
    java.lang.Runnable mOnTimeout -> c
    com.mparticle.LicenseChecker this$0 -> a
    220:261:void verifyLicense(int,java.lang.String,java.lang.String) -> a
    196:196:com.mparticle.LicenseValidator access$000(com.mparticle.LicenseChecker$ResultListener) -> a
    196:196:void access$400(com.mparticle.LicenseChecker$ResultListener) -> b
com.mparticle.LicenseChecker$ResultListener$1 -> com.mparticle.j$a$1:
    com.mparticle.LicenseChecker$ResultListener this$1 -> a
    204:207:void run() -> run
com.mparticle.LicenseChecker$ResultListener$2 -> com.mparticle.j$a$2:
    int val$responseCode -> a
    java.lang.String val$signedData -> b
    java.lang.String val$signature -> c
    com.mparticle.LicenseChecker$ResultListener this$1 -> d
    222:259:void run() -> run
com.mparticle.LicenseCheckerCallback -> com.mparticle.k:
    void allow(int) -> a
    void dontAllow(int) -> b
    void applicationError(int) -> c
com.mparticle.LicenseValidator -> com.mparticle.l:
    com.mparticle.Policy mPolicy -> a
    com.mparticle.LicenseCheckerCallback mCallback -> b
    int mNonce -> c
    java.lang.String mPackageName -> d
    java.lang.String mVersionCode -> e
    com.mparticle.DeviceLimiter mDeviceLimiter -> f
    65:65:com.mparticle.LicenseCheckerCallback getCallback() -> a
    69:69:int getNonce() -> b
    73:73:java.lang.String getPackageName() -> c
    87:193:void verify(java.security.PublicKey,int,java.lang.String,java.lang.String) -> a
    203:212:void handleResponse(int,com.mparticle.ResponseData) -> a
    215:216:void handleApplicationError(int) -> a
    219:220:void handleInvalidResponse() -> d
com.mparticle.MPReceiver -> com.mparticle.MPReceiver:
    59:68:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.mparticle.MPService -> com.mparticle.MPService:
    java.lang.Object LOCK -> a
    android.os.PowerManager$WakeLock sWakeLock -> b
    45:54:void runIntentInService(android.content.Context,android.content.Intent) -> a
    58:59:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    65:86:void onHandleIntent(android.content.Intent) -> onHandleIntent
    116:137:void handleRegistration(android.content.Intent) -> a
    208:217:java.lang.String findMessageKey(java.lang.String[],android.os.Bundle) -> a
    221:259:void showPushWithMessage(java.lang.String,java.lang.String,android.os.Bundle) -> a
com.mparticle.MPTransaction -> com.mparticle.MPTransaction:
    org.json.JSONObject transactionInfo -> a
    67:67:org.json.JSONObject getData() -> a
com.mparticle.MPTransaction$Builder -> com.mparticle.MPTransaction$Builder:
    java.lang.String productName -> a
    java.lang.String productSku -> b
    java.lang.Double productUnitPrice -> c
    java.lang.Integer quantity -> d
    java.lang.String productCategory -> e
    java.lang.Double revenueAmount -> f
    java.lang.Double taxAmount -> g
    java.lang.Double shippingAmount -> h
    java.lang.String currencyCode -> i
    java.lang.String affiliation -> j
    java.lang.String transactionId -> k
    110:111:com.mparticle.MPTransaction$Builder unitPrice(double) -> unitPrice
    121:122:com.mparticle.MPTransaction$Builder quantity(int) -> quantity
    132:133:com.mparticle.MPTransaction$Builder productCategory(java.lang.String) -> productCategory
    143:144:com.mparticle.MPTransaction$Builder totalRevenue(double) -> totalRevenue
    154:155:com.mparticle.MPTransaction$Builder taxAmount(double) -> taxAmount
    165:166:com.mparticle.MPTransaction$Builder shippingAmount(double) -> shippingAmount
    176:177:com.mparticle.MPTransaction$Builder currencyCode(java.lang.String) -> currencyCode
    187:188:com.mparticle.MPTransaction$Builder affiliation(java.lang.String) -> affiliation
    198:199:com.mparticle.MPTransaction$Builder transactionId(java.lang.String) -> transactionId
    209:209:com.mparticle.MPTransaction build() -> build
    75:75:java.lang.String access$000(com.mparticle.MPTransaction$Builder) -> a
    75:75:java.lang.String access$100(com.mparticle.MPTransaction$Builder) -> b
    75:75:java.lang.String access$200(com.mparticle.MPTransaction$Builder) -> c
    75:75:java.lang.Double access$300(com.mparticle.MPTransaction$Builder) -> d
    75:75:java.lang.Integer access$400(com.mparticle.MPTransaction$Builder) -> e
    75:75:java.lang.Double access$500(com.mparticle.MPTransaction$Builder) -> f
    75:75:java.lang.Double access$600(com.mparticle.MPTransaction$Builder) -> g
    75:75:java.lang.Double access$700(com.mparticle.MPTransaction$Builder) -> h
    75:75:java.lang.String access$800(com.mparticle.MPTransaction$Builder) -> i
    75:75:java.lang.String access$900(com.mparticle.MPTransaction$Builder) -> j
    75:75:java.lang.String access$1000(com.mparticle.MPTransaction$Builder) -> k
com.mparticle.MParticle -> com.mparticle.MParticle:
    android.os.HandlerThread sTimeoutHandlerThread -> f
    byte[] SALT -> g
    android.os.Bundle lastNotificationBundle -> h
    boolean appRunning -> a
    com.mparticle.MParticle instance -> i
    android.content.SharedPreferences sPreferences -> j
    com.mparticle.ConfigManager mConfigManager -> b
    com.mparticle.AppStateManager mAppStateManager -> c
    java.lang.String mSessionID -> d
    long mSessionStartTime -> e
    long mLastEventTime -> k
    org.json.JSONArray mUserIdentities -> l
    org.json.JSONObject mUserAttributes -> m
    org.json.JSONObject mSessionAttributes -> n
    com.mparticle.MessageManager mMessageManager -> o
    android.os.Handler mTimeoutHandler -> p
    com.mparticle.MParticle$MParticleLocationListener mLocationListener -> q
    com.mparticle.ExceptionHandler mExHandler -> r
    android.content.Context mAppContext -> s
    java.lang.String mApiKey -> t
    boolean mDebugMode -> u
    int mEventCount -> v
    java.lang.String mLaunchUri -> w
    com.mparticle.PushRegistrationListener registrationListener -> x
    140:144:void start(android.content.Context) -> start
    156:166:void start(android.content.Context,java.lang.String,java.lang.String,boolean) -> start
    180:227:com.mparticle.MParticle getInstance(android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    237:240:com.mparticle.MParticle getInstance() -> getInstance
    245:245:boolean setCheckedAttribute(org.json.JSONObject,java.lang.String,java.lang.Object) -> a
    250:277:boolean setCheckedAttribute(org.json.JSONObject,java.lang.String,java.lang.Object,boolean) -> a
    292:299:void logStateTransition(java.lang.String) -> a
    310:314:void activityStarted(android.app.Activity) -> activityStarted
    326:330:void activityStopped(android.app.Activity) -> activityStopped
    336:340:void beginSession() -> beginSession
    346:350:void endSession() -> endSession
    353:361:void endSession(long) -> a
    368:372:void ensureActiveSession() -> d
    378:388:boolean checkSessionTimeout() -> a
    395:405:void newSession() -> e
    411:412:void upload() -> upload
    419:420:void setInstallReferrer(java.lang.String) -> setInstallReferrer
    431:432:void logEvent(java.lang.String,com.mparticle.MParticle$EventType) -> logEvent
    442:443:void logEvent(java.lang.String,com.mparticle.MParticle$EventType,long) -> logEvent
    453:454:void logEvent(java.lang.String,com.mparticle.MParticle$EventType,java.util.Map) -> logEvent
    465:466:void logEvent(java.lang.String,com.mparticle.MParticle$EventType,java.util.Map,long) -> logEvent
    478:497:void logEvent(java.lang.String,com.mparticle.MParticle$EventType,java.util.Map,long,java.lang.String) -> logEvent
    515:527:void logTransaction(com.mparticle.MPTransaction) -> logTransaction
    539:552:void logScreen(java.lang.String,java.util.Map,boolean) -> a
    568:569:void logScreen(java.lang.String) -> logScreen
    578:579:void logScreen(java.lang.String,java.util.Map) -> logScreen
    588:599:void leaveBreadcrumb(java.lang.String) -> leaveBreadcrumb
    611:612:void logError(java.lang.String) -> logError
    621:630:void logError(java.lang.String,java.util.Map) -> logError
    644:645:void logException(java.lang.Exception) -> logException
    654:655:void logException(java.lang.Exception,java.util.Map) -> logException
    665:674:void logException(java.lang.Exception,java.util.Map,java.lang.String) -> logException
    684:691:void logUnhandledError(java.lang.Throwable) -> a
    702:721:void enableLocationTracking(java.lang.String,long,long) -> enableLocationTracking
    727:732:void disableLocationTracking() -> disableLocationTracking
    740:741:void setLocation(android.location.Location) -> setLocation
    750:758:void setSessionAttribute(java.lang.String,java.lang.String) -> setSessionAttribute
    767:778:void setUserAttribute(java.lang.String,java.lang.String) -> setUserAttribute
    786:797:void removeUserAttribute(java.lang.String) -> removeUserAttribute
    805:806:void setUserTag(java.lang.String) -> setUserTag
    814:815:void removeUserTag(java.lang.String) -> removeUserTag
    826:860:void setUserIdentity(java.lang.String,com.mparticle.MParticle$IdentityType) -> setUserIdentity
    870:897:void removeUserIdentity(java.lang.String) -> removeUserIdentity
    910:910:boolean getOptOut() -> getOptOut
    919:930:void setOptOut(boolean) -> setOptOut
    942:943:void setDebugMode(boolean) -> setDebugMode
    952:952:boolean getDebugMode() -> getDebugMode
    961:962:void setUploadInterval(int) -> setUploadInterval
    970:971:void setDebugUploadInterval(int) -> setDebugUploadInterval
    977:984:void enableUncaughtExceptionLogging() -> enableUncaughtExceptionLogging
    990:997:void disableUncaughtExceptionLogging() -> disableUncaughtExceptionLogging
    1005:1011:void enablePushNotifications(java.lang.String) -> enablePushNotifications
    1017:1018:void disablePushNotifications() -> disablePushNotifications
    1027:1028:void setNotificationSoundEnabled(boolean) -> setNotificationSoundEnabled
    1037:1038:void setNotificationVibrationEnabled(boolean) -> setNotificationVibrationEnabled
    1041:1042:void clearPushNotificationId() -> b
    1045:1046:void setPushRegistrationId(java.lang.String) -> b
    1055:1060:boolean checkEventLimit() -> f
    1073:1082:org.json.JSONObject enforceAttributeConstraints(java.util.Map) -> a
    1146:1146:boolean isAutoTrackingEnabled() -> isAutoTrackingEnabled
    1155:1155:int getSessionTimeout() -> getSessionTimeout
    1166:1167:void setSessionTimeout(int) -> setSessionTimeout
    1170:1175:void logNotification(android.os.Bundle,java.lang.String) -> a
    1329:1330:void setPushNotificationIcon(int) -> setPushNotificationIcon
    1340:1341:void setPushNotificationTitle(int) -> setPushNotificationTitle
    66:66:android.content.SharedPreferences access$200() -> c
    66:66:com.mparticle.LicenseCheckerCallback access$300(com.mparticle.MParticle) -> a
    66:66:com.mparticle.MessageManager access$400(com.mparticle.MParticle) -> b
com.mparticle.MParticle$1 -> com.mparticle.MParticle$1:
    com.mparticle.MParticle this$0 -> a
    1297:1298:void onRegistered(java.lang.String) -> a
    1302:1303:void onCleared$552c4e01() -> a
com.mparticle.MParticle$EventType -> com.mparticle.MParticle$EventType:
    com.mparticle.MParticle$EventType Unknown -> Unknown
    com.mparticle.MParticle$EventType Navigation -> Navigation
    com.mparticle.MParticle$EventType Location -> Location
    com.mparticle.MParticle$EventType Search -> Search
    com.mparticle.MParticle$EventType Transaction -> Transaction
    com.mparticle.MParticle$EventType UserContent -> UserContent
    com.mparticle.MParticle$EventType UserPreference -> UserPreference
    com.mparticle.MParticle$EventType Social -> Social
    com.mparticle.MParticle$EventType Other -> Other
    com.mparticle.MParticle$EventType[] $VALUES -> a
    1185:1185:com.mparticle.MParticle$EventType[] values() -> values
    1185:1185:com.mparticle.MParticle$EventType valueOf(java.lang.String) -> valueOf
    1189:1189:java.lang.String toString() -> toString
com.mparticle.MParticle$IdentityType -> com.mparticle.MParticle$IdentityType:
    com.mparticle.MParticle$IdentityType Other -> Other
    com.mparticle.MParticle$IdentityType CustomId -> CustomId
    com.mparticle.MParticle$IdentityType Facebook -> Facebook
    com.mparticle.MParticle$IdentityType Twitter -> Twitter
    com.mparticle.MParticle$IdentityType Google -> Google
    com.mparticle.MParticle$IdentityType Microsoft -> Microsoft
    com.mparticle.MParticle$IdentityType Yahoo -> Yahoo
    com.mparticle.MParticle$IdentityType Email -> Email
    int value -> a
    com.mparticle.MParticle$IdentityType[] $VALUES -> b
    1200:1200:com.mparticle.MParticle$IdentityType[] values() -> values
    1200:1200:com.mparticle.MParticle$IdentityType valueOf(java.lang.String) -> valueOf
    1217:1217:int getValue() -> getValue
    1200:1200:int access$000(com.mparticle.MParticle$IdentityType) -> a
com.mparticle.MParticle$MPLicenseCheckerCallback -> com.mparticle.MParticle$a:
    com.mparticle.MParticle this$0 -> a
    1266:1272:void allow(int) -> a
    1275:1281:void dontAllow(int) -> b
    1284:1290:void applicationError(int) -> c
com.mparticle.MParticle$MParticleLocationListener -> com.mparticle.MParticle$b:
    com.mparticle.MParticle mParticle -> a
    1247:1248:void onLocationChanged(android.location.Location) -> onLocationChanged
    1252:1252:void onProviderDisabled(java.lang.String) -> onProviderDisabled
    1256:1256:void onProviderEnabled(java.lang.String) -> onProviderEnabled
    1260:1260:void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.mparticle.MParticle$Push -> com.mparticle.MParticle$Push:
    java.lang.String BROADCAST_NOTIFICATION_RECEIVED -> BROADCAST_NOTIFICATION_RECEIVED
    java.lang.String BROADCAST_NOTIFICATION_TAPPED -> BROADCAST_NOTIFICATION_TAPPED
    java.lang.String PUSH_ALERT_EXTRA -> PUSH_ALERT_EXTRA
com.mparticle.MParticle$SessionTimeoutHandler -> com.mparticle.MParticle$c:
    com.mparticle.MParticle mParticle -> a
    1231:1235:void handleMessage(android.os.Message) -> handleMessage
com.mparticle.MParticleDatabase -> com.mparticle.MParticleDatabase:
    129:134:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    139:147:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.mparticle.MParticleDatabase$BreadcrumbTable -> com.mparticle.MParticleDatabase$BreadcrumbTable:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String SESSION_ID -> SESSION_ID
    java.lang.String API_KEY -> API_KEY
    java.lang.String MESSAGE -> MESSAGE
    java.lang.String CREATED_AT -> CREATED_AT
    java.lang.String CF_UUID -> CF_UUID
com.mparticle.MParticleDatabase$CommandTable -> com.mparticle.MParticleDatabase$CommandTable:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String URL -> URL
    java.lang.String METHOD -> METHOD
    java.lang.String POST_DATA -> POST_DATA
    java.lang.String HEADERS -> HEADERS
    java.lang.String CREATED_AT -> CREATED_AT
    java.lang.String SESSION_ID -> SESSION_ID
    java.lang.String API_KEY -> API_KEY
    java.lang.String CF_UUID -> CF_UUID
com.mparticle.MParticleDatabase$MessageTable -> com.mparticle.MParticleDatabase$MessageTable:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String SESSION_ID -> SESSION_ID
    java.lang.String API_KEY -> API_KEY
    java.lang.String MESSAGE -> MESSAGE
    java.lang.String STATUS -> STATUS
    java.lang.String CREATED_AT -> CREATED_AT
    java.lang.String MESSAGE_TYPE -> MESSAGE_TYPE
    java.lang.String CF_UUID -> CF_UUID
com.mparticle.MParticleDatabase$SessionTable -> com.mparticle.MParticleDatabase$SessionTable:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String SESSION_ID -> SESSION_ID
    java.lang.String API_KEY -> API_KEY
    java.lang.String START_TIME -> START_TIME
    java.lang.String END_TIME -> END_TIME
    java.lang.String SESSION_LENGTH -> SESSION_LENGTH
    java.lang.String ATTRIBUTES -> ATTRIBUTES
    java.lang.String CF_UUID -> CF_UUID
com.mparticle.MParticleDatabase$UploadTable -> com.mparticle.MParticleDatabase$UploadTable:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String API_KEY -> API_KEY
    java.lang.String MESSAGE -> MESSAGE
    java.lang.String CREATED_AT -> CREATED_AT
    java.lang.String CF_UUID -> CF_UUID
    java.lang.String SESSION_ID -> SESSION_ID
com.mparticle.MParticleJSInterface -> com.mparticle.MParticleJSInterface:
    com.mparticle.MParticle mApiInstance -> a
    50:84:void logEvent(java.lang.String) -> logEvent
    89:94:void setUserTag(java.lang.String) -> setUserTag
    99:104:void removeUserTag(java.lang.String) -> removeUserTag
    109:114:void setUserAttribute(java.lang.String) -> setUserAttribute
    119:124:void removeUserAttribute(java.lang.String) -> removeUserAttribute
    129:134:void setSessionAttribute(java.lang.String) -> setSessionAttribute
    139:144:void setUserIdentity(java.lang.String) -> setUserIdentity
    149:154:void removeUserIdentity(java.lang.String) -> removeUserIdentity
    157:174:java.util.Map convertToMap(org.json.JSONObject) -> a
com.mparticle.MessageHandler -> com.mparticle.m:
    com.mparticle.MParticleDatabase mDB -> a
    java.lang.String mApiKey -> b
    java.lang.String[] breadcrumbColumns -> c
    java.lang.String[] idColumns -> d
    52:195:void handleMessage(android.os.Message) -> handleMessage
    204:221:void appendBreadcrumbs(android.database.sqlite.SQLiteDatabase,org.json.JSONObject) -> a
    255:269:void dbInsertMessage(android.database.sqlite.SQLiteDatabase,org.json.JSONObject) -> b
    286:293:void dbUpdateSessionEndTime(android.database.sqlite.SQLiteDatabase,java.lang.String,long,long) -> a
    299:304:java.lang.String getMessageSessionId(org.json.JSONObject) -> a
com.mparticle.MessageManager -> com.mparticle.n:
    android.os.HandlerThread sMessageHandlerThread -> a
    android.os.HandlerThread sUploadHandlerThread -> b
    java.lang.Runtime rt -> c
    java.lang.String sActiveNetworkName -> d
    android.location.Location sLocation -> e
    boolean sFirstRun -> f
    android.content.BroadcastReceiver sStatusBroadcastReceiver -> g
    double sBatteryLevel -> h
    com.mparticle.MessageHandler mMessageHandler -> i
    com.mparticle.UploadHandler mUploadHandler -> j
    android.content.Context mContext -> k
    long sStartTime -> l
    android.content.SharedPreferences mPreferences -> m
    com.mparticle.ConfigManager mConfigManager -> n
    70:104:void start(android.content.Context,java.lang.Boolean) -> a
    109:140:org.json.JSONObject createMessage(java.lang.String,java.lang.String,long,long,java.lang.String,org.json.JSONObject) -> a
    144:165:org.json.JSONObject getStateInfo() -> a
    199:201:org.json.JSONObject createMessageSessionEnd(java.lang.String,long,long,long,org.json.JSONObject) -> a
    206:231:void startSession(java.lang.String,long,java.lang.String) -> a
    242:242:int getCurrentSessionCounter() -> c
    247:256:void stopSession(java.lang.String,long,long) -> a
    259:262:void endSession(java.lang.String,long,long) -> b
    266:276:void logEvent(java.lang.String,long,long,java.lang.String,com.mparticle.MParticle$EventType,org.json.JSONObject,long) -> a
    280:290:void logScreen(java.lang.String,long,long,java.lang.String,org.json.JSONObject,boolean) -> a
    294:305:void logBreadcrumb(java.lang.String,long,long,java.lang.String) -> a
    309:315:void optOut(java.lang.String,long,long,boolean) -> a
    318:319:void logErrorEvent(java.lang.String,long,long,java.lang.String,java.lang.Throwable,org.json.JSONObject) -> a
    323:343:void logErrorEvent(java.lang.String,long,long,java.lang.String,java.lang.Throwable,org.json.JSONObject,boolean) -> a
    347:355:void setPushRegistrationId(java.lang.String,long,long,java.lang.String,boolean) -> a
    359:367:void setSessionAttributes(java.lang.String,org.json.JSONObject) -> a
    370:371:void doUpload() -> b
    374:378:void setLocation(android.location.Location) -> a
    382:400:void logStateTransition(java.lang.String,java.lang.String,long,android.os.Bundle) -> a
    403:424:void logNotification(java.lang.String,long,android.os.Bundle,java.lang.String) -> a
    444:456:void setDataConnection(android.net.NetworkInfo) -> a
    30:30:double access$102(double) -> a
com.mparticle.MessageManager$StatusBroadcastReceiver -> com.mparticle.n$a:
    com.mparticle.MessageManager this$0 -> a
    429:440:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.mparticle.Obfuscator -> com.mparticle.o:
    java.lang.String obfuscate(java.lang.String,java.lang.String) -> a
    java.lang.String unobfuscate(java.lang.String,java.lang.String) -> b
com.mparticle.PersistentCookieStore -> com.mparticle.PersistentCookieStore:
    java.util.concurrent.ConcurrentHashMap cookies -> a
    android.content.SharedPreferences cookiePrefs -> b
    96:110:void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    115:124:void clear() -> clear
    128:154:boolean clearExpired(java.util.Date) -> clearExpired
    159:159:java.util.List getCookies() -> getCookies
    167:175:java.lang.String encodeCookie(com.mparticle.PersistentCookieStore$SerializableCookie) -> a
    179:189:org.apache.http.cookie.Cookie decodeCookie(java.lang.String) -> a
    195:203:java.lang.String byteArrayToHexString(byte[]) -> a
com.mparticle.PersistentCookieStore$SerializableCookie -> com.mparticle.PersistentCookieStore$SerializableCookie:
    long serialVersionUID -> serialVersionUID
    org.apache.http.cookie.Cookie cookie -> a
    org.apache.http.impl.cookie.BasicClientCookie clientCookie -> b
    230:234:org.apache.http.cookie.Cookie getCookie() -> getCookie
    238:246:void writeObject(java.io.ObjectOutputStream) -> writeObject
    249:258:void readObject(java.io.ObjectInputStream) -> readObject
com.mparticle.Policy -> com.mparticle.p:
    long mValidityTimestamp -> a
    long mRetryUntil -> b
    long mMaxRetries -> c
    long mRetryCount -> d
    long mLastResponseTime -> e
    int mLastResponse -> f
    com.mparticle.PreferenceObfuscator mPreferences -> g
    105:127:void processServerResponse(int,com.mparticle.ResponseData) -> a
    246:259:boolean allowAccess() -> a
    149:151:void setRetryCount(long) -> a
    167:177:void setValidityTimestamp(java.lang.String) -> a
    193:203:void setRetryUntil(java.lang.String) -> b
    219:229:void setMaxRetries(java.lang.String) -> c
    263:273:java.util.Map decodeExtras(java.lang.String) -> d
com.mparticle.PreferenceObfuscator -> com.mparticle.q:
    android.content.SharedPreferences mPreferences -> a
    com.mparticle.Obfuscator mObfuscator -> b
    android.content.SharedPreferences$Editor mEditor -> c
    46:51:void putString(java.lang.String,java.lang.String) -> a
    55:68:java.lang.String getString(java.lang.String,java.lang.String) -> b
    72:76:void commit() -> a
com.mparticle.ProviderPersistence -> com.mparticle.ProviderPersistence:
com.mparticle.PushRegistrationListener -> com.mparticle.r:
    void onRegistered(java.lang.String) -> a
    void onCleared$552c4e01() -> a
com.mparticle.ResponseData -> com.mparticle.s:
    int responseCode -> a
    int nonce -> b
    java.lang.String packageName -> c
    java.lang.String versionCode -> d
    java.lang.String userId -> e
    long timestamp -> f
    java.lang.String extra -> g
    76:76:java.lang.String toString() -> toString
com.mparticle.UploadHandler -> com.mparticle.t:
    com.mparticle.MParticleDatabase mDB -> a
    android.content.SharedPreferences mPreferences -> b
    android.content.Context mContext -> c
    java.lang.String mApiKey -> d
    java.lang.String mSecret -> e
    org.apache.http.protocol.HttpContext mHttpContext -> f
    org.json.JSONObject mAppInfo -> g
    org.json.JSONObject mDeviceInfo -> h
    android.net.ConnectivityManager mConnectivyManager -> i
    boolean mAccessNetworkStateAvailable -> j
    com.mparticle.ConfigManager mConfigManager -> k
    java.lang.String SQL_DELETABLE_MESSAGES -> l
    java.lang.String SQL_UPLOADABLE_MESSAGES -> m
    java.lang.String SQL_HISTORY_MESSAGES -> n
    java.lang.String SQL_FINISHED_HISTORY_MESSAGES -> o
    char[] HEX_CHARS -> p
    144:197:void handleMessage(android.os.Message) -> handleMessage
    201:234:void fetchConfig() -> a
    265:348:void prepareUploads(boolean) -> a
    352:403:org.json.JSONObject createUploadMessage(org.json.JSONArray,boolean) -> a
    407:548:boolean processUploads(boolean) -> b
    554:562:java.lang.String extractResponseBody(org.apache.http.HttpResponse) -> a
    567:585:void addMessageSignature(org.apache.http.client.methods.HttpUriRequest,java.lang.String) -> a
    588:649:void processCommands() -> b
    662:662:java.net.URI makeServiceUri(java.lang.String) -> a
    666:671:void dbInsertUpload(android.database.sqlite.SQLiteDatabase,org.json.JSONObject) -> a
    674:676:void dbDeleteProcessedMessages(android.database.sqlite.SQLiteDatabase,java.lang.String) -> a
    692:694:void dbDeleteUpload(android.database.sqlite.SQLiteDatabase,int) -> a
    697:699:void dbDeleteCommand(android.database.sqlite.SQLiteDatabase,int) -> b
    713:721:boolean isNetworkAvailable() -> c
    725:740:org.apache.http.client.HttpClient setupHttpClient() -> d
    764:769:java.lang.String asHex(byte[]) -> a
com.mparticle.ValidationException -> com.mparticle.u:
    long serialVersionUID -> serialVersionUID
com.mparticle.activity.MPActivity -> com.mparticle.activity.MPActivity:
    27:31:void onStart() -> onStart
    35:39:void onStop() -> onStop
com.mparticle.activity.MPListActivity -> com.mparticle.activity.MPListActivity:
    27:31:void onStart() -> onStart
    35:39:void onStop() -> onStop
