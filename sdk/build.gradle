apply plugin: 'com.android.library'
apply plugin: 'maven'


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0-rc1'

    }
}

repositories {
    mavenCentral()
}

configurations {
    deployerJars
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return Integer.parseInt(formattedDate)
}

android {
    compileSdkVersion 19
    buildToolsVersion "21.1.1"

    String url = "\"\"";
    String configurationUrl = "\"\"";
    try {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        if (properties.stringPropertyNames().contains('mp.url')) {
            url = properties.getProperty('mp.url')
        }
        if (properties.stringPropertyNames().contains('mp.configurl')) {
            configurationUrl = properties.getProperty('mp.configurl')
        }
    }catch (Exception e){

    }

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 19
        versionName sdkversion
        versionCode getDate()
        testApplicationId "com.mparticle.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
        testHandleProfiling true
        testFunctionalTest true

        buildConfigField "String", "MP_URL", url
        buildConfigField "String", "MP_CONFIG_URL", configurationUrl

    }

    buildTypes {

        debug {
            minifyEnabled false
        }

        unity {
            minifyEnabled true
            proguardFile 'proguard.txt'
        }

        release {
            minifyEnabled true
            proguardFile 'proguard.txt'
        }
    }

    lintOptions {
        abortOnError false
    }

}

android.libraryVariants.all { variant ->
    def name = variant.name

    task "javadoc$name"(type: Javadoc) {
        description = "Generates javadoc for build $name"
        destinationDir = new File('docs', variant.baseName)
        source = files(variant.javaCompile.source)
        classpath = files(android.getBootClasspath(), variant.javaCompile.classpath)
        title = null
        ext.androidJar =
                "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        List<File> pathList = new ArrayList<File>();
        pathList.add(new File("docs/doclava-1.0.6.jar"))
        options.addStringOption('title', 'Android SDK')
        options.addStringOption('templatedir', 'docs/customization')
        options.docletpath = pathList
        options.doclet = "com.google.doclava.Doclava"
        exclude '**/R.java'
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            if (mavenrepo == "s3") {
                configuration = configurations.deployerJars
                repository(url: "s3://maven.mparticle.com")
                pom.version = sdkversion
                pom.artifactId = 'android-sdk'
                pom.groupId = 'com.mparticle'
            }else{
                repository url: 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
                pom.version = sdkversion
                pom.artifactId = 'android-sdk'
                pom.groupId = 'com.mparticle'
            }
        }
    }
}

dependencies {
    deployerJars "org.kuali.maven.wagons:maven-s3-wagon:1.2.1"
    compile files('embeddedkits/Kahuna489.jar')
    compile files('embeddedkits/KochavaSDK.jar')
    compile files('embeddedkits/MobileAppTracker-3.1.jar')
    compile files('embeddedkits/comscore2140923.jar')
    provided 'com.google.android.gms:play-services:4.+'
    provided 'com.android.support:support-v4:19.+'

    unityCompile project('unityskeleton')
}
