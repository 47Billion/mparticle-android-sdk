apply plugin: 'android-library'
apply plugin: 'maven'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.11.+'

    }
}

repositories {
    mavenCentral()
}

configurations {
    deployerJars
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.1"
    useOldManifestMerger false

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 19
        versionName sdkversion
        testPackageName "com.mparticle.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
        testHandleProfiling true
        testFunctionalTest true
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "ECHO", "true"
            buildConfigField "boolean", "UNITY", "false"
            runProguard false
        }

        unity {
            buildConfigField "boolean", "ECHO", "false"
            buildConfigField "boolean", "UNITY", "true"
            runProguard true
            proguardFile 'proguard.txt'
        }

        release {
            buildConfigField "boolean", "ECHO", "false"
            buildConfigField "boolean", "UNITY", "false"
            runProguard false
            proguardFile 'proguard.txt'
        }

    }

    lintOptions {
        abortOnError false
    }

}

android.libraryVariants.all { variant ->
    def name = variant.name

    task "javadoc$name"(type: Javadoc) {
        description = "Generates javadoc for build $name"
        destinationDir = new File('docs', variant.baseName)
        source = 'src/main/java'
        classpath = files(android.getBootClasspath(), variant.javaCompile.classpath)
        title = null
        List<File> pathList = new ArrayList<File>();
        pathList.add(new File("docs/doclava-1.0.6.jar"))
        options.addStringOption('title', 'Android SDK')
        options.addStringOption('templatedir', 'docs/customization')
        options.docletpath = pathList
        options.doclet = "com.google.doclava.Doclava"
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            if (mavenrepo == "s3") {
                configuration = configurations.deployerJars
                repository(url: "s3://www.mparticle.com/maven")
                pom.version = sdkversion
                pom.artifactId = 'android-sdk'
                pom.groupId = 'com.mparticle'
                pom.packaging = 'jar'
            }else{
                repository(url: "file://localhost/Users/sdozor/maven/repo/")
                pom.version = sdkversion
                pom.artifactId = 'android-sdk'
                pom.groupId = 'com.mparticle'
                pom.packaging = 'jar'
            }
        }
    }
}

dependencies {
    deployerJars "org.kuali.maven.wagons:maven-s3-wagon:1.2.1"
    compile fileTree(dir: 'embeddedkits', include: ['*.jar'])
    compile 'com.google.android.gms:play-services:4+'
    unityCompile project('unityskeleton')
}
