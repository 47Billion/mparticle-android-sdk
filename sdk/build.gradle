apply plugin: 'com.android.library'
apply plugin: 'maven'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.+'
    }
}

repositories {
    mavenCentral()
}

configurations {
    deployerJars
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return Integer.parseInt(formattedDate)
}

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultPublishConfig "embeddedkitsRelease"


    String url = "\"\"";
    String configurationUrl = "\"\"";
    try {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        if (properties.stringPropertyNames().contains('mp.url')) {
            url = properties.getProperty('mp.url')
        }
        if (properties.stringPropertyNames().contains('mp.configurl')) {
            configurationUrl = properties.getProperty('mp.configurl')
        }
    }catch (Exception e){

    }

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 22
        versionName sdkversion
        versionCode getDate()
        testApplicationId "com.mparticle.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
        testHandleProfiling true
        testFunctionalTest true

        buildConfigField "String", "MP_URL", url
        buildConfigField "String", "MP_CONFIG_URL", configurationUrl
        buildConfigField "Boolean", "MP_DEBUG", "false"

    }

    productFlavors {

        embeddedkits {

        }

        nokits {

        }
    }

    buildTypes {

        debug {
            minifyEnabled false
            buildConfigField "Boolean", "MP_DEBUG", "true"
        }

        unity {
            minifyEnabled true
            proguardFile 'proguard.txt'
        }

        release {
            minifyEnabled true
            proguardFile 'proguard.txt'
            //buildConfigField "Boolean", "MP_DEBUG", "true"
        }
    }

    lintOptions {
        abortOnError false
    }

}

android.libraryVariants.all { variant ->
    def name = variant.name

    task "javadoc$name"(type: Javadoc) {
        description = "Generates javadoc for build $name"
        destinationDir = new File('docs', variant.baseName)
        source = files(variant.javaCompile.source)
        classpath = files(android.getBootClasspath(), variant.javaCompile.classpath)
        title = null
        ext.androidJar =
                "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        List<File> pathList = new ArrayList<File>();
        pathList.add(new File("docs/doclava-1.0.6.jar"))
        options.addStringOption('title', 'Android SDK')
        options.addStringOption('templatedir', 'docs/customization')
        options.docletpath = pathList
        options.doclet = "com.google.doclava.Doclava"
        exclude '**/R.java'
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            if (mavenrepo == "s3") {
                configuration = configurations.deployerJars
                repository(url: "s3://maven.mparticle.com")
            }else{
                repository url: 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
            }

            pom.project {
                version = sdkversion
                artifactId = 'android-sdk'
                groupId = 'com.mparticle'
                packaging 'aar'
                description 'mParticle Android SDK'
                url 'http://www.mparticle.com'
                developers {
                    developer {
                        id 'samdozor'
                        name 'Sam Dozor'
                        email 'sdozor@mparticle.com'
                    }
                }
            }

            pom.whenConfigured { pom ->
                pom.dependencies*.optional = true
                pom.dependencies*.scope = 'provided'
            }
        }
    }
}

dependencies {
    deployerJars "org.kuali.maven.wagons:maven-s3-wagon:1.2.1"
    embeddedkitsCompile files('embeddedkits/Kahuna556.jar')
    embeddedkitsCompile files('embeddedkits/Kochava20150312.jar')
    embeddedkitsCompile files('embeddedkits/comscore2140923.jar')
    embeddedkitsCompile files('embeddedkits/appboysdk172.jar')
    compile 'com.google.android.gms:play-services-gcm:[7.0,)'
    unityCompile project('unityskeleton')
    testCompile 'junit:junit:4.12'
    testCompile  files('libs/java-json.jar')
    testCompile "org.mockito:mockito-core:1.+"
    testCompile "org.powermock:powermock-module-junit4:1.6.2"
    testCompile "org.powermock:powermock-api-mockito:1.6.2"
    testCompile "org.powermock:powermock-core:1.6.2"
}
